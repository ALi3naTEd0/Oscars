name: Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (This will be used in ALL platform builds)'
        required: true
        default: '1.0.0-1'

permissions:
  contents: write
  actions: write

jobs:
  trigger-builds:
    strategy:
      matrix:
        include:
          - platform: android
            runner: ubuntu-latest
          - platform: linux
            runner: ubuntu-latest
          - platform: windows
            runner: windows-latest
          - platform: macos
            runner: macos-latest
      fail-fast: false
    
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Trigger ${{ matrix.platform }} build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '${{ matrix.platform }}.yml',
              ref: context.ref,
              inputs: {
                version: '${{ github.event.inputs.version }}'
              }
            });
            
            // Monitor build status
            let complete = false;
            while (!complete) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: '${{ matrix.platform }}.yml',
                status: 'completed',
                per_page: 1
              });
              
              if (runs.data.workflow_runs.length > 0) {
                const run = runs.data.workflow_runs[0];
                console.log(`${run.name} status: ${run.status} (${run.conclusion})`);
                if (run.conclusion === 'success') {
                  complete = true;
                } else if (run.conclusion === 'failure') {
                  throw new Error(`${run.name} build failed!`);
                }
              }
              await new Promise(r => setTimeout(r, 10000));
            }

  create-release:
    needs: trigger-builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: |
            oscars-*

      - name: List artifacts
        run: ls -R artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: true
          files: artifacts/**/*
