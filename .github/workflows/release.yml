name: Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (This will be used in ALL platform builds)'
        required: true
        default: '1.0.0-1'

permissions:
  contents: write
  actions: write

jobs:
  build-all:
    strategy:
      matrix:
        platform: [android, linux, windows, macos]
      fail-fast: false
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Trigger ${{ matrix.platform }} workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '${{ matrix.platform }}.yml',
              ref: context.ref,
              inputs: {
                version: '${{ github.event.inputs.version }}'
              }
            });
            console.log(`Triggered ${matrix.platform} build`);
            
            // Wait for completion
            let complete = false;
            while (!complete) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: '${{ matrix.platform }}.yml',
                per_page: 1
              });
              
              if (runs.data.workflow_runs.length > 0) {
                const run = runs.data.workflow_runs[0];
                console.log(`${matrix.platform}: ${run.status} (${run.conclusion || 'running'})`);
                
                if (run.status === 'completed') {
                  if (run.conclusion !== 'success') {
                    throw new Error(`${matrix.platform} build failed`);
                  }
                  complete = true;
                }
              }
              
              if (!complete) {
                await new Promise(r => setTimeout(r, 10000));
              }
            }

  create-release:
    needs: build-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: List Artifacts
        run: |
          echo "Downloaded artifacts:"
          ls -R artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: true
          files: artifacts/**/*
