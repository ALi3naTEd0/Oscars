name: Release Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (This will be used in ALL platform builds)'
        required: true
        default: '1.0.0-1'

permissions:
  contents: write
  actions: write

jobs:
  trigger-builds:
    strategy:
      matrix:
        platform: [android, linux, windows, macos]
      fail-fast: false
      
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Trigger ${{ matrix.platform }} build
        id: trigger
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const workflow = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '${{ matrix.platform }}.yml',
              ref: context.ref,
              inputs: {
                version: '${{ github.event.inputs.version }}'
              }
            });
            console.log(`Triggered ${workflow.status}`);
            
            // Monitor build progress
            let buildComplete = false;
            while (!buildComplete) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: '${{ matrix.platform }}.yml',
                branch: context.ref,
                per_page: 1
              });
              
              if (runs.data.workflow_runs.length > 0) {
                const run = runs.data.workflow_runs[0];
                console.log(`${run.name} status: ${run.status} (${run.conclusion || 'in progress'})`);
                
                if (run.status === 'completed') {
                  buildComplete = true;
                  if (run.conclusion !== 'success') {
                    throw new Error(`${run.name} build failed!`);
                  }
                }
              }
              
              if (!buildComplete) {
                await new Promise(resolve => setTimeout(resolve, 10000)); // Wait 10 seconds
              }
            }
            
            return 'success';

  create-release:
    needs: trigger-builds
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Wait for workflows to complete
        run: sleep 120  # Give time for artifacts to be available

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: |
            oscars-universal
            oscars-arm64-v8a
            oscars-armeabi-v7a
            oscars-x86_64
            oscars-AppImage
            oscars-DEB
            oscars-RPM
            oscars-DMG
            oscars-portable
            oscars-Setup

      - name: List downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          ls -R artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          draft: true
          files: |
            artifacts/**/*
