name: Linux Build

on:
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.19.3'

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build clang libgtk-3-dev
          sudo apt-get install -y python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Build Linux App
        run: |
          flutter config --enable-linux-desktop
          flutter clean
          flutter pub get
          flutter build linux --release

      # AppImage creation
      - name: Download AppImage Tool
        run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool

      - name: Create AppDir
        run: |
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          cp -r build/linux/x64/release/bundle/* AppDir/usr/bin/
          curl -o AppDir/usr/share/icons/hicolor/256x256/apps/oscars.png \
            https://raw.githubusercontent.com/ALi3naTEd0/Oscars/main/assets/oscars.png
          cp AppDir/usr/share/icons/hicolor/256x256/apps/oscars.png AppDir/oscars.png
          cat > AppDir/oscars.desktop << EOL
          [Desktop Entry]
          Name=Oscars
          Exec=oscars
          Icon=oscars
          Type=Application
          Categories=Utility;
          EOL
          cp AppDir/oscars.desktop AppDir/usr/share/applications/
          cat > AppDir/AppRun << EOL
          #!/bin/bash
          HERE=\$(dirname \$(readlink -f "\${0}"))
          export PATH="\${HERE}/usr/bin:\${PATH}"
          export LD_LIBRARY_PATH="\${HERE}/usr/bin/lib:\${LD_LIBRARY_PATH}"
          exec "\${HERE}/usr/bin/oscars" "\$@"
          EOL
          chmod +x AppDir/AppRun

      - name: Build AppImage
        run: |
          ARCH=x86_64 ./appimagetool AppDir
          mv Oscars-x86_64.AppImage oscars_1.0.0-1.AppImage

      # DEB package creation
      - name: Create DEB Package
        run: |
          mkdir -p oscars-1.0.0/DEBIAN
          mkdir -p oscars-1.0.0/usr/bin
          mkdir -p oscars-1.0.0/usr/share/applications
          mkdir -p oscars-1.0.0/usr/share/icons/hicolor/256x256/apps
          cp -r build/linux/x64/release/bundle/* oscars-1.0.0/usr/bin/
          cp AppDir/usr/share/icons/hicolor/256x256/apps/oscars.png \
            oscars-1.0.0/usr/share/icons/hicolor/256x256/apps/
          cp AppDir/usr/share/applications/oscars.desktop \
            oscars-1.0.0/usr/share/applications/
          cat > oscars-1.0.0/DEBIAN/control << EOL
          Package: oscars
          Version: 1.0.0
          Section: x11
          Priority: optional
          Architecture: amd64
          Maintainer: ALi3naTEd0 <your@email.com>
          Description: Oscar Awards app
           A Flutter desktop application for Oscar Awards information.
          EOL
          dpkg-deb --build oscars-1.0.0
          mv oscars-1.0.0.deb oscars_1.0.0-1.deb

      # RPM package creation
      - name: Create RPM Package
        run: |
          sudo apt-get install -y alien
          sudo alien --keep-version --to-rpm oscars_1.0.0-1.deb

      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: oscars-AppImage
          path: oscars_1.0.0-1.AppImage

      - name: Upload DEB
        uses: actions/upload-artifact@v4
        with:
          name: oscars-DEB
          path: oscars_1.0.0-1.deb

      - name: Upload RPM
        uses: actions/upload-artifact@v4
        with:
          name: oscars-RPM
          path: oscars-1.0.0-1.*.rpm
