name: Linux Build

on:
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.19.3'

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Linux Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake pkg-config ninja-build clang libgtk-3-dev
          sudo apt-get install -y libgtk-3-0 libgtk-3-dev libgtkmm-3.0-dev
          sudo apt-get install -y python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse
          sudo apt-get install -y rpm file

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Build Linux App
        env:
          CFLAGS: "-Wno-error -Wno-error=switch"
          CXXFLAGS: "-Wno-error -Wno-error=switch"
          CC: clang
          CXX: clang++
        run: |
          flutter config --enable-linux-desktop
          flutter clean
          rm -rf build
          flutter pub cache repair
          flutter pub get
          flutter build linux --release

      # AppImage creation
      - name: Download AppImage Tool
        run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool

      - name: Create AppDir
        run: |
          APP_NAME="oscars"
          VERSION="1.0.0"
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          
          # Copy application
          cp -r build/linux/x64/release/bundle/* AppDir/usr/bin/
          
          # Download and setup icons
          curl -o AppDir/usr/share/icons/hicolor/256x256/apps/$APP_NAME.png \
            https://raw.githubusercontent.com/ALi3naTEd0/Oscars/main/assets/oscars.png
          
          # Copy icon to root of AppDir (required by AppImage)
          cp AppDir/usr/share/icons/hicolor/256x256/apps/$APP_NAME.png AppDir/$APP_NAME.png
          
          # Create desktop file in correct location
          cat > AppDir/$APP_NAME.desktop << EOL
          [Desktop Entry]
          Name=Oscars
          Exec=oscars
          Icon=oscars
          Type=Application
          Categories=Utility;
          EOL
          
          cp AppDir/$APP_NAME.desktop AppDir/usr/share/applications/
          
          # Create AppRun
          cat > AppDir/AppRun << EOL
          #!/bin/bash
          HERE=\$(dirname \$(readlink -f "\${0}"))
          export PATH="\${HERE}/usr/bin:\${PATH}"
          export LD_LIBRARY_PATH="\${HERE}/usr/bin/lib:\${LD_LIBRARY_PATH}"
          exec "\${HERE}/usr/bin/oscars" "\$@"
          EOL
          
          chmod +x AppDir/AppRun

      - name: Build AppImage
        run: |
          ARCH=x86_64 ./appimagetool AppDir
          mv Oscars-x86_64.AppImage oscars_1.0.0-1.AppImage

      # DEB package creation
      - name: Create DEB Package
        run: |
          APP_NAME="oscars"
          VERSION="1.0.0"
          
          mkdir -p $APP_NAME-$VERSION/DEBIAN
          mkdir -p $APP_NAME-$VERSION/usr/bin
          mkdir -p $APP_NAME-$VERSION/usr/share/applications
          mkdir -p $APP_NAME-$VERSION/usr/share/icons/hicolor/256x256/apps
          
          # Copy application
          cp -r build/linux/x64/release/bundle/* $APP_NAME-$VERSION/usr/bin/
          
          # Copy icon
          cp AppDir/usr/share/icons/hicolor/256x256/apps/$APP_NAME.png \
            $APP_NAME-$VERSION/usr/share/icons/hicolor/256x256/apps/
          
          # Copy desktop file
          cp AppDir/usr/share/applications/$APP_NAME.desktop \
            $APP_NAME-$VERSION/usr/share/applications/
          
          # Create control file
          cat > $APP_NAME-$VERSION/DEBIAN/control << EOL
          Package: oscars
          Version: $VERSION
          Section: x11
          Priority: optional
          Architecture: amd64
          Maintainer: ALi3naTEd0 <your@email.com>
          Description: Oscar Awards app
           A Flutter desktop application for Oscar Awards information.
          EOL
          
          # Build DEB package
          dpkg-deb --build $APP_NAME-$VERSION
          mv ${APP_NAME}-${VERSION}.deb oscars_1.0.0-1.deb

      # RPM package creation using alien
      - name: Create RPM Package
        run: |
          sudo apt-get install -y alien
          rm -rf *.rpm oscars-1.0.0
          cd ${{ github.workspace }}
          sudo alien --to-rpm oscars_1.0.0-1.deb
          # Use find to locate and rename the generated RPM
          find . -name "*.rpm" -exec mv {} oscars_1.0.0-1.rpm \;

      - name: Upload Linux Packages
        uses: actions/upload-artifact@v4
        with:
          name: oscars-linux
          path: |
            oscars_1.0.0-1.AppImage
            oscars_1.0.0-1.deb
            oscars_1.0.0-1.rpm
